version: 0.2
phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - echo "Installing dependencies..."

  build:
    commands:
      # First Package: Packaging everything except 'table_objects' and call it get_api_lambda_pack
      - echo "Packaging Lambda function 1 (get_api_lambda_pack)..."
      - mkdir get_api_lambda_pack
      # Zip everything except the 'table_objects' directory
      - zip -r9 get_api_lambda_pack.zip DB_Manager_EP -x "DB_Manager_EP/table_objects/*" requirements.txt lambda_function.py events_handler.py utils.py config_file.json

      # Second Package: Packaging everything
      - echo "Packaging Lambda function 2 (all files)..."
      - mkdir full_lambda_package
      # Zip the entire directory including all files and folders
      - zip -r9 full_lambda_package.zip DB_Manager_EP requirements.txt lambda_function.py events_handler.py utils.py config_file.json


  post_build:
    commands:
      - echo "Updating lambda Function..."
      - aws lambda update-function-code --function-name getDataFromAPI --zip-file fileb://get_api_lambda_pack.zip
      - echo "DONE!!"

      - echo Deploying Lambda function 2...
      - aws lambda update-function-code --function-name BiDataProcessLevel --zip-file fileb://full_lambda_package.zip
      - echo "DONE!!"